spring.application.name=TransactionManager
server.port=7970

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/tx_manager?characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

tx-lcn.manager.admin-key=txManager
# TxManager Host Ip
tx-lcn.manager.host=127.0.0.1
# TxClient连接请求端口
tx-lcn.manager.port=8070

# 心跳检测时间(ms)
tx-lcn.manager.heart-time=15000
# 分布式事务执行总时间
tx-lcn.manager.dtx-time=30000
#参数延迟删除时间单位ms
tx-lcn.message.netty.attr-delay-time=10000
tx-lcn.manager.concurrent-level=128
# 开启日志
#tx-lcn.logger.enabled=true
#tx-lcn.logger.driver-class-name=spring.datasource.driver?class?nametx?lcn.logger.jdbc?url={spring.datasource.url}
#tx-lcn.logger.username=spring.datasource.usernametx?lcn.logger.password={spring.datasource.password}

logging.level.com.codingapi=debug

# 验证连接是否有效。 此参数必须设置为非空字符串,
#下面三项设置成true才能生
#spring.datasource.validationQuery=SELECT 1
## 指明连接是否被空闲连接回收器(如果有)进行检验.
##如果检测失败, 则连接将被从池中去除.
#spring.datasource.testWhileIdle=true
## 指明是否在从池中取出连接前进行检验,
##如果检验失败, 则从池中去除连接并尝试取出另一个
#spring.datasource.testOnBorrow=true
## 指明是否在归还到池中前进行检验
#spring.datasource.testOnReturn=false

#redis 主机
spring.redis.host=127.0.0.1
#redis 端口
spring.redis.port=6379
#redis 密码
spring.redis.password=root

spring.redis.timeout=5000
spring.redis.poolMaxTotal=1000
spring.redis.poolMaxIdle=500
spring.redis.poolMaxWait=500

spring.redis.jedis.pool.max-active = 8
spring.redis.jedis.pool.max-wait = -1
spring.redis.jedis.pool.max-idle = 0

#jpa设置
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update


##连接池的设置
#spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
##初始化时建立物理连接的个数
#spring.datasource.druid.initial-size=5
##最小连接池数量
#spring.datasource.druid.min-idle=5
##最大连接池数量 maxIdle已经不再使用
#spring.datasource.druid.max-active=20
##获取连接时最大等待时间，单位毫秒
#spring.datasource.druid.max-wait=60000
##申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#spring.datasource.druid.test-while-idle=true
##既作为检测的间隔时间又作为testWhileIdel执行的依据
#spring.datasource.druid.time-between-eviction-runs-millis=60000
##销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
#spring.datasource.druid.min-evictable-idle-time-millis=30000
##用来检测连接是否有效的sql 必须是一个查询语句
##mysql中为 select 'x'
##oracle中为 select 1 from dual
#spring.datasource.druid.validation-query=select 'x'
##申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-borrow=false
##归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-return=true
##是否缓存preparedStatement,mysql5.5+建议开启
##spring.datasource.druid.pool-prepared-statements=true
##当值大于0时poolPreparedStatements会自动修改为true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
##配置扩展插件
#spring.datasource.druid.filters=stat,wall
##通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
##合并多个DruidDataSource的监控数据
#spring.datasource.druid.use-global-data-source-stat=true
##设置访问druid监控页的账号和密码,默认没有
##spring.datasource.druid.stat-view-servlet.login-username=admin
##spring.datasource.druid.stat-view-servlet.login-password=123456
## 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true
#
##启用过滤
#spring.datasource.druid.web-stat-filter.enabled=true
#spring.datasource.druid.web-stat-filter.url-pattern=/*
##忽略内容
#spring.datasource.druid.web-stat-filter.exclusions=.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
##连接池的访问页面
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
##添加白名单
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
##添加黑名单
##spring.datasource.druid.stat-view-servlet.deny=192.168.31.253
##不能被重置
#spring.datasource.druid.stat-view-servlet.reset-enable=false
##设置连接池访问页面的登录密码
#spring.datasource.druid.stat-view-servlet.login-username=root
#spring.datasource.druid.stat-view-servlet.login-password=123