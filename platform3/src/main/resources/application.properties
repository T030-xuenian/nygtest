#客户端：
spring.application.name=system
eureka.instance.appname=system
eureka.instance.hostname=${spring.cloud.client.ip-address}
eureka.instance.instance-id= ${eureka.instance.hostname}:${server.port}
eureka.instance.ip-address=${EUREKA_IP:${eureka.instance.hostname}}
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=7

eureka.client.service-url.defaultZone=http://127.0.0.1:8713/eureka
eureka.client.service-url.registry-fetch-interval-seconds=50 #客户端拉取注册中心的服务列表


# 是否检索服务（获取eureka服务列表）
eureka.client.fetch-registry=true
#是否向服务注册中心注册自己（如果仅作为调用者，不提供服务，可以为false）
eureka.client.register-with-eureka=true
# 下面这行是重点将IP注册到eureka中，如果为false默认注册主机名
eureka.instance.prefer-ip-address=true

server.port=8193
server.tomcat.uri-encoding=UTF-8
#mysql 驱动配置信息

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/archives?characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#
##连接池的设置
#spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
##初始化时建立物理连接的个数
#spring.datasource.druid.initial-size=5
##最小连接池数量
#spring.datasource.druid.min-idle=5
##最大连接池数量 maxIdle已经不再使用
#spring.datasource.druid.max-active=20
##获取连接时最大等待时间，单位毫秒
#spring.datasource.druid.max-wait=60000
##申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#spring.datasource.druid.test-while-idle=true
##既作为检测的间隔时间又作为testWhileIdel执行的依据
#spring.datasource.druid.time-between-eviction-runs-millis=60000
##销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
#spring.datasource.druid.min-evictable-idle-time-millis=30000
##用来检测连接是否有效的sql 必须是一个查询语句
##mysql中为 select 'x'
##oracle中为 select 1 from dual
#spring.datasource.druid.validation-query=select 'x'
##申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-borrow=false
##归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-return=true
##是否缓存preparedStatement,mysql5.5+建议开启
##spring.datasource.druid.pool-prepared-statements=true
##当值大于0时poolPreparedStatements会自动修改为true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
##配置扩展插件
#spring.datasource.druid.filters=stat,wall
##通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
##合并多个DruidDataSource的监控数据
#spring.datasource.druid.use-global-data-source-stat=true
##设置访问druid监控页的账号和密码,默认没有
##spring.datasource.druid.stat-view-servlet.login-username=admin
##spring.datasource.druid.stat-view-servlet.login-password=123456
## 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true
#
##启用过滤
#spring.datasource.druid.web-stat-filter.enabled=true
#spring.datasource.druid.web-stat-filter.url-pattern=/*
##忽略内容
#spring.datasource.druid.web-stat-filter.exclusions=.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
##连接池的访问页面
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
##添加白名单
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
##添加黑名单
##spring.datasource.druid.stat-view-servlet.deny=192.168.31.253
##不能被重置
#spring.datasource.druid.stat-view-servlet.reset-enable=false
##设置连接池访问页面的登录密码
#spring.datasource.druid.stat-view-servlet.login-username=root
#spring.datasource.druid.stat-view-servlet.login-password=123

#设置开启热部署
spring.devtools.restart.enabled=true
#重启目录
spring.devtools.restart.additional-paths=src/main/java
#不重启目录
spring.devtools.restart.exclude=WEB-INF/**
#页面不加载缓存，修改即时生效
spring.devtools.freemarker.cache=false

#jpa设置
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# TxManager Host Ip
tx-lcn.client.manager-address=127.0.0.1:8070
springcloud.loadbalance.enabled=true

